// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	apiv1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringCheck) DeepCopyInto(out *MonitoringCheck) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringCheck.
func (in *MonitoringCheck) DeepCopy() *MonitoringCheck {
	if in == nil {
		return nil
	}
	out := new(MonitoringCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitoringCheck) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringCheckList) DeepCopyInto(out *MonitoringCheckList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MonitoringCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringCheckList.
func (in *MonitoringCheckList) DeepCopy() *MonitoringCheckList {
	if in == nil {
		return nil
	}
	out := new(MonitoringCheckList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitoringCheckList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringCheckSpec) DeepCopyInto(out *MonitoringCheckSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(MonitoringCheckSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringCheckSpec.
func (in *MonitoringCheckSpec) DeepCopy() *MonitoringCheckSpec {
	if in == nil {
		return nil
	}
	out := new(MonitoringCheckSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringCheckSpecResource) DeepCopyInto(out *MonitoringCheckSpecResource) {
	*out = *in
	if in.AlertSensitivity != nil {
		in, out := &in.AlertSensitivity, &out.AlertSensitivity
		*out = new(string)
		**out = **in
	}
	if in.BasicMetricsOnly != nil {
		in, out := &in.BasicMetricsOnly, &out.BasicMetricsOnly
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(int64)
		**out = **in
	}
	if in.Job != nil {
		in, out := &in.Job, &out.Job
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Probes != nil {
		in, out := &in.Probes, &out.Probes
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = new(MonitoringCheckSpecSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(int64)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringCheckSpecResource.
func (in *MonitoringCheckSpecResource) DeepCopy() *MonitoringCheckSpecResource {
	if in == nil {
		return nil
	}
	out := new(MonitoringCheckSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringCheckSpecSettings) DeepCopyInto(out *MonitoringCheckSpecSettings) {
	*out = *in
	if in.Dns != nil {
		in, out := &in.Dns, &out.Dns
		*out = new(MonitoringCheckSpecSettingsDns)
		(*in).DeepCopyInto(*out)
	}
	if in.Http != nil {
		in, out := &in.Http, &out.Http
		*out = new(MonitoringCheckSpecSettingsHttp)
		(*in).DeepCopyInto(*out)
	}
	if in.Ping != nil {
		in, out := &in.Ping, &out.Ping
		*out = new(MonitoringCheckSpecSettingsPing)
		(*in).DeepCopyInto(*out)
	}
	if in.Tcp != nil {
		in, out := &in.Tcp, &out.Tcp
		*out = new(MonitoringCheckSpecSettingsTcp)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringCheckSpecSettings.
func (in *MonitoringCheckSpecSettings) DeepCopy() *MonitoringCheckSpecSettings {
	if in == nil {
		return nil
	}
	out := new(MonitoringCheckSpecSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringCheckSpecSettingsDns) DeepCopyInto(out *MonitoringCheckSpecSettingsDns) {
	*out = *in
	if in.IpVersion != nil {
		in, out := &in.IpVersion, &out.IpVersion
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RecordType != nil {
		in, out := &in.RecordType, &out.RecordType
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.SourceIPAddress != nil {
		in, out := &in.SourceIPAddress, &out.SourceIPAddress
		*out = new(string)
		**out = **in
	}
	if in.ValidRCodes != nil {
		in, out := &in.ValidRCodes, &out.ValidRCodes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ValidateAdditionalRrs != nil {
		in, out := &in.ValidateAdditionalRrs, &out.ValidateAdditionalRrs
		*out = make([]MonitoringCheckSpecSettingsDnsValidateAdditionalRrs, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ValidateAnswerRrs != nil {
		in, out := &in.ValidateAnswerRrs, &out.ValidateAnswerRrs
		*out = new(MonitoringCheckSpecSettingsDnsValidateAnswerRrs)
		(*in).DeepCopyInto(*out)
	}
	if in.ValidateAuthorityRrs != nil {
		in, out := &in.ValidateAuthorityRrs, &out.ValidateAuthorityRrs
		*out = new(MonitoringCheckSpecSettingsDnsValidateAuthorityRrs)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringCheckSpecSettingsDns.
func (in *MonitoringCheckSpecSettingsDns) DeepCopy() *MonitoringCheckSpecSettingsDns {
	if in == nil {
		return nil
	}
	out := new(MonitoringCheckSpecSettingsDns)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringCheckSpecSettingsDnsValidateAdditionalRrs) DeepCopyInto(out *MonitoringCheckSpecSettingsDnsValidateAdditionalRrs) {
	*out = *in
	if in.FailIfMatchesRegexp != nil {
		in, out := &in.FailIfMatchesRegexp, &out.FailIfMatchesRegexp
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FailIfNotMatchesRegexp != nil {
		in, out := &in.FailIfNotMatchesRegexp, &out.FailIfNotMatchesRegexp
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringCheckSpecSettingsDnsValidateAdditionalRrs.
func (in *MonitoringCheckSpecSettingsDnsValidateAdditionalRrs) DeepCopy() *MonitoringCheckSpecSettingsDnsValidateAdditionalRrs {
	if in == nil {
		return nil
	}
	out := new(MonitoringCheckSpecSettingsDnsValidateAdditionalRrs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringCheckSpecSettingsDnsValidateAnswerRrs) DeepCopyInto(out *MonitoringCheckSpecSettingsDnsValidateAnswerRrs) {
	*out = *in
	if in.FailIfMatchesRegexp != nil {
		in, out := &in.FailIfMatchesRegexp, &out.FailIfMatchesRegexp
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FailIfNotMatchesRegexp != nil {
		in, out := &in.FailIfNotMatchesRegexp, &out.FailIfNotMatchesRegexp
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringCheckSpecSettingsDnsValidateAnswerRrs.
func (in *MonitoringCheckSpecSettingsDnsValidateAnswerRrs) DeepCopy() *MonitoringCheckSpecSettingsDnsValidateAnswerRrs {
	if in == nil {
		return nil
	}
	out := new(MonitoringCheckSpecSettingsDnsValidateAnswerRrs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringCheckSpecSettingsDnsValidateAuthorityRrs) DeepCopyInto(out *MonitoringCheckSpecSettingsDnsValidateAuthorityRrs) {
	*out = *in
	if in.FailIfMatchesRegexp != nil {
		in, out := &in.FailIfMatchesRegexp, &out.FailIfMatchesRegexp
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FailIfNotMatchesRegexp != nil {
		in, out := &in.FailIfNotMatchesRegexp, &out.FailIfNotMatchesRegexp
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringCheckSpecSettingsDnsValidateAuthorityRrs.
func (in *MonitoringCheckSpecSettingsDnsValidateAuthorityRrs) DeepCopy() *MonitoringCheckSpecSettingsDnsValidateAuthorityRrs {
	if in == nil {
		return nil
	}
	out := new(MonitoringCheckSpecSettingsDnsValidateAuthorityRrs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringCheckSpecSettingsHttp) DeepCopyInto(out *MonitoringCheckSpecSettingsHttp) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = new(MonitoringCheckSpecSettingsHttpBasicAuth)
		(*in).DeepCopyInto(*out)
	}
	if in.BearerToken != nil {
		in, out := &in.BearerToken, &out.BearerToken
		*out = new(string)
		**out = **in
	}
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.CacheBustingQueryParamName != nil {
		in, out := &in.CacheBustingQueryParamName, &out.CacheBustingQueryParamName
		*out = new(string)
		**out = **in
	}
	if in.FailIfBodyMatchesRegexp != nil {
		in, out := &in.FailIfBodyMatchesRegexp, &out.FailIfBodyMatchesRegexp
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FailIfBodyNotMatchesRegexp != nil {
		in, out := &in.FailIfBodyNotMatchesRegexp, &out.FailIfBodyNotMatchesRegexp
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FailIfHeaderMatchesRegexp != nil {
		in, out := &in.FailIfHeaderMatchesRegexp, &out.FailIfHeaderMatchesRegexp
		*out = make([]MonitoringCheckSpecSettingsHttpFailIfHeaderMatchesRegexp, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FailIfHeaderNotMatchesRegexp != nil {
		in, out := &in.FailIfHeaderNotMatchesRegexp, &out.FailIfHeaderNotMatchesRegexp
		*out = make([]MonitoringCheckSpecSettingsHttpFailIfHeaderNotMatchesRegexp, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FailIfNotSsl != nil {
		in, out := &in.FailIfNotSsl, &out.FailIfNotSsl
		*out = new(bool)
		**out = **in
	}
	if in.FailIfSsl != nil {
		in, out := &in.FailIfSsl, &out.FailIfSsl
		*out = new(bool)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IpVersion != nil {
		in, out := &in.IpVersion, &out.IpVersion
		*out = new(string)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.NoFollowRedirects != nil {
		in, out := &in.NoFollowRedirects, &out.NoFollowRedirects
		*out = new(bool)
		**out = **in
	}
	if in.ProxyURL != nil {
		in, out := &in.ProxyURL, &out.ProxyURL
		*out = new(string)
		**out = **in
	}
	if in.TlsConfig != nil {
		in, out := &in.TlsConfig, &out.TlsConfig
		*out = new(MonitoringCheckSpecSettingsHttpTlsConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ValidHTTPVersions != nil {
		in, out := &in.ValidHTTPVersions, &out.ValidHTTPVersions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ValidStatusCodes != nil {
		in, out := &in.ValidStatusCodes, &out.ValidStatusCodes
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringCheckSpecSettingsHttp.
func (in *MonitoringCheckSpecSettingsHttp) DeepCopy() *MonitoringCheckSpecSettingsHttp {
	if in == nil {
		return nil
	}
	out := new(MonitoringCheckSpecSettingsHttp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringCheckSpecSettingsHttpBasicAuth) DeepCopyInto(out *MonitoringCheckSpecSettingsHttpBasicAuth) {
	*out = *in
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringCheckSpecSettingsHttpBasicAuth.
func (in *MonitoringCheckSpecSettingsHttpBasicAuth) DeepCopy() *MonitoringCheckSpecSettingsHttpBasicAuth {
	if in == nil {
		return nil
	}
	out := new(MonitoringCheckSpecSettingsHttpBasicAuth)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringCheckSpecSettingsHttpFailIfHeaderMatchesRegexp) DeepCopyInto(out *MonitoringCheckSpecSettingsHttpFailIfHeaderMatchesRegexp) {
	*out = *in
	if in.AllowMissing != nil {
		in, out := &in.AllowMissing, &out.AllowMissing
		*out = new(bool)
		**out = **in
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = new(string)
		**out = **in
	}
	if in.Regexp != nil {
		in, out := &in.Regexp, &out.Regexp
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringCheckSpecSettingsHttpFailIfHeaderMatchesRegexp.
func (in *MonitoringCheckSpecSettingsHttpFailIfHeaderMatchesRegexp) DeepCopy() *MonitoringCheckSpecSettingsHttpFailIfHeaderMatchesRegexp {
	if in == nil {
		return nil
	}
	out := new(MonitoringCheckSpecSettingsHttpFailIfHeaderMatchesRegexp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringCheckSpecSettingsHttpFailIfHeaderNotMatchesRegexp) DeepCopyInto(out *MonitoringCheckSpecSettingsHttpFailIfHeaderNotMatchesRegexp) {
	*out = *in
	if in.AllowMissing != nil {
		in, out := &in.AllowMissing, &out.AllowMissing
		*out = new(bool)
		**out = **in
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = new(string)
		**out = **in
	}
	if in.Regexp != nil {
		in, out := &in.Regexp, &out.Regexp
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringCheckSpecSettingsHttpFailIfHeaderNotMatchesRegexp.
func (in *MonitoringCheckSpecSettingsHttpFailIfHeaderNotMatchesRegexp) DeepCopy() *MonitoringCheckSpecSettingsHttpFailIfHeaderNotMatchesRegexp {
	if in == nil {
		return nil
	}
	out := new(MonitoringCheckSpecSettingsHttpFailIfHeaderNotMatchesRegexp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringCheckSpecSettingsHttpTlsConfig) DeepCopyInto(out *MonitoringCheckSpecSettingsHttpTlsConfig) {
	*out = *in
	if in.CaCert != nil {
		in, out := &in.CaCert, &out.CaCert
		*out = new(string)
		**out = **in
	}
	if in.ClientCert != nil {
		in, out := &in.ClientCert, &out.ClientCert
		*out = new(string)
		**out = **in
	}
	if in.ClientKey != nil {
		in, out := &in.ClientKey, &out.ClientKey
		*out = new(string)
		**out = **in
	}
	if in.InsecureSkipVerify != nil {
		in, out := &in.InsecureSkipVerify, &out.InsecureSkipVerify
		*out = new(bool)
		**out = **in
	}
	if in.ServerName != nil {
		in, out := &in.ServerName, &out.ServerName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringCheckSpecSettingsHttpTlsConfig.
func (in *MonitoringCheckSpecSettingsHttpTlsConfig) DeepCopy() *MonitoringCheckSpecSettingsHttpTlsConfig {
	if in == nil {
		return nil
	}
	out := new(MonitoringCheckSpecSettingsHttpTlsConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringCheckSpecSettingsPing) DeepCopyInto(out *MonitoringCheckSpecSettingsPing) {
	*out = *in
	if in.DontFragment != nil {
		in, out := &in.DontFragment, &out.DontFragment
		*out = new(bool)
		**out = **in
	}
	if in.IpVersion != nil {
		in, out := &in.IpVersion, &out.IpVersion
		*out = new(string)
		**out = **in
	}
	if in.PayloadSize != nil {
		in, out := &in.PayloadSize, &out.PayloadSize
		*out = new(int64)
		**out = **in
	}
	if in.SourceIPAddress != nil {
		in, out := &in.SourceIPAddress, &out.SourceIPAddress
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringCheckSpecSettingsPing.
func (in *MonitoringCheckSpecSettingsPing) DeepCopy() *MonitoringCheckSpecSettingsPing {
	if in == nil {
		return nil
	}
	out := new(MonitoringCheckSpecSettingsPing)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringCheckSpecSettingsTcp) DeepCopyInto(out *MonitoringCheckSpecSettingsTcp) {
	*out = *in
	if in.IpVersion != nil {
		in, out := &in.IpVersion, &out.IpVersion
		*out = new(string)
		**out = **in
	}
	if in.QueryResponse != nil {
		in, out := &in.QueryResponse, &out.QueryResponse
		*out = make([]MonitoringCheckSpecSettingsTcpQueryResponse, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceIPAddress != nil {
		in, out := &in.SourceIPAddress, &out.SourceIPAddress
		*out = new(string)
		**out = **in
	}
	if in.Tls != nil {
		in, out := &in.Tls, &out.Tls
		*out = new(bool)
		**out = **in
	}
	if in.TlsConfig != nil {
		in, out := &in.TlsConfig, &out.TlsConfig
		*out = new(MonitoringCheckSpecSettingsTcpTlsConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringCheckSpecSettingsTcp.
func (in *MonitoringCheckSpecSettingsTcp) DeepCopy() *MonitoringCheckSpecSettingsTcp {
	if in == nil {
		return nil
	}
	out := new(MonitoringCheckSpecSettingsTcp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringCheckSpecSettingsTcpQueryResponse) DeepCopyInto(out *MonitoringCheckSpecSettingsTcpQueryResponse) {
	*out = *in
	if in.Expect != nil {
		in, out := &in.Expect, &out.Expect
		*out = new(string)
		**out = **in
	}
	if in.Send != nil {
		in, out := &in.Send, &out.Send
		*out = new(string)
		**out = **in
	}
	if in.StartTls != nil {
		in, out := &in.StartTls, &out.StartTls
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringCheckSpecSettingsTcpQueryResponse.
func (in *MonitoringCheckSpecSettingsTcpQueryResponse) DeepCopy() *MonitoringCheckSpecSettingsTcpQueryResponse {
	if in == nil {
		return nil
	}
	out := new(MonitoringCheckSpecSettingsTcpQueryResponse)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringCheckSpecSettingsTcpTlsConfig) DeepCopyInto(out *MonitoringCheckSpecSettingsTcpTlsConfig) {
	*out = *in
	if in.CaCert != nil {
		in, out := &in.CaCert, &out.CaCert
		*out = new(string)
		**out = **in
	}
	if in.ClientCert != nil {
		in, out := &in.ClientCert, &out.ClientCert
		*out = new(string)
		**out = **in
	}
	if in.ClientKey != nil {
		in, out := &in.ClientKey, &out.ClientKey
		*out = new(string)
		**out = **in
	}
	if in.InsecureSkipVerify != nil {
		in, out := &in.InsecureSkipVerify, &out.InsecureSkipVerify
		*out = new(bool)
		**out = **in
	}
	if in.ServerName != nil {
		in, out := &in.ServerName, &out.ServerName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringCheckSpecSettingsTcpTlsConfig.
func (in *MonitoringCheckSpecSettingsTcpTlsConfig) DeepCopy() *MonitoringCheckSpecSettingsTcpTlsConfig {
	if in == nil {
		return nil
	}
	out := new(MonitoringCheckSpecSettingsTcpTlsConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringCheckStatus) DeepCopyInto(out *MonitoringCheckStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringCheckStatus.
func (in *MonitoringCheckStatus) DeepCopy() *MonitoringCheckStatus {
	if in == nil {
		return nil
	}
	out := new(MonitoringCheckStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringProbe) DeepCopyInto(out *MonitoringProbe) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringProbe.
func (in *MonitoringProbe) DeepCopy() *MonitoringProbe {
	if in == nil {
		return nil
	}
	out := new(MonitoringProbe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitoringProbe) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringProbeList) DeepCopyInto(out *MonitoringProbeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MonitoringProbe, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringProbeList.
func (in *MonitoringProbeList) DeepCopy() *MonitoringProbeList {
	if in == nil {
		return nil
	}
	out := new(MonitoringProbeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitoringProbeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringProbeSpec) DeepCopyInto(out *MonitoringProbeSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(MonitoringProbeSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringProbeSpec.
func (in *MonitoringProbeSpec) DeepCopy() *MonitoringProbeSpec {
	if in == nil {
		return nil
	}
	out := new(MonitoringProbeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringProbeSpecResource) DeepCopyInto(out *MonitoringProbeSpecResource) {
	*out = *in
	if in.AuthToken != nil {
		in, out := &in.AuthToken, &out.AuthToken
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Public != nil {
		in, out := &in.Public, &out.Public
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringProbeSpecResource.
func (in *MonitoringProbeSpecResource) DeepCopy() *MonitoringProbeSpecResource {
	if in == nil {
		return nil
	}
	out := new(MonitoringProbeSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringProbeStatus) DeepCopyInto(out *MonitoringProbeStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringProbeStatus.
func (in *MonitoringProbeStatus) DeepCopy() *MonitoringProbeStatus {
	if in == nil {
		return nil
	}
	out := new(MonitoringProbeStatus)
	in.DeepCopyInto(out)
	return out
}
